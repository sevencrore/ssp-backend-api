{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "version": "1.0.0"
    },
    "paths": {
        "/api/business": {
            "get": {
                "tags": [
                    "Business"
                ],
                "summary": "Get authenticated business",
                "description": "Returns the authenticated business details",
                "operationId": "9be6ad8edb737a22e2112453c671d540",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Business Name"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "business@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Business"
                ],
                "summary": "Create a new business",
                "description": "Creates a new business entry",
                "operationId": "1d00ca8538e9223139dd9a09127bc82f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "business_name",
                                    "address",
                                    "city",
                                    "postal_code",
                                    "phone_number",
                                    "website",
                                    "description",
                                    "keywords",
                                    "is_approved"
                                ],
                                "properties": {
                                    "business_name": {
                                        "type": "string",
                                        "example": "My Business"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "My City"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "555-5555"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "http://business.com"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A detailed description"
                                    },
                                    "keywords": {
                                        "type": "string",
                                        "example": "keyword1, keyword2"
                                    },
                                    "is_approved": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Business created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/business/{id}": {
            "get": {
                "tags": [
                    "Business"
                ],
                "summary": "Get a specific business by ID",
                "description": "Returns details of a specific business",
                "operationId": "8b9ae0aee76c6942f49074f1f6611c26",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business found"
                    },
                    "404": {
                        "description": "Business not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Business"
                ],
                "summary": "Update a specific business",
                "description": "Updates a business record",
                "operationId": "e3e357831413e60b97627525a07dc3f2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "business_name",
                                    "address",
                                    "city",
                                    "postal_code",
                                    "phone_number",
                                    "website",
                                    "description",
                                    "keywords",
                                    "is_approved"
                                ],
                                "properties": {
                                    "business_name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "postal_code": {
                                        "type": "string"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "website": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "keywords": {
                                        "type": "string"
                                    },
                                    "is_approved": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/business/{id}/edit": {
            "get": {
                "tags": [
                    "Business"
                ],
                "summary": "Retrieve business details for editing",
                "description": "Get business details by ID for editing purposes",
                "operationId": "1f63017c3a0ed6979bda6ec737280ef0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the business to be edited",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Business data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "null",
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business data retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Business not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Business not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/business/delete-multiple": {
            "post": {
                "tags": [
                    "Business"
                ],
                "summary": "Delete multiple businesses",
                "description": "Soft delete multiple businesses by IDs",
                "operationId": "6a22186cdf092165fafee11d4d8355d8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids"
                                ],
                                "properties": {
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Businesses deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "null",
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "3 businesses deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid IDs provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/business/restore-multiple": {
            "post": {
                "tags": [
                    "Business"
                ],
                "summary": "Restore multiple businesses",
                "description": "Restore multiple soft-deleted businesses by IDs",
                "operationId": "06d3e5239a8a986b682e8cff1a8ec475",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids"
                                ],
                                "properties": {
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Businesses restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "null",
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "3 businesses restored successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid IDs provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/business/force-delete-multiple": {
            "post": {
                "tags": [
                    "Business"
                ],
                "summary": "Permanently delete multiple businesses",
                "description": "Permanently delete multiple soft-deleted businesses by IDs",
                "operationId": "f72e6148fdb5f4cb50577dc0b0720bf2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ids"
                                ],
                                "properties": {
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Businesses permanently deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "null",
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "3 businesses permanently deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid IDs provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get all cart items",
                "description": "Fetches all items in the cart.",
                "operationId": "4d318ce69cfd6264db026debe928c066",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Create a new cart item",
                "description": "Stores a new cart item with user_id and product_id.",
                "operationId": "996c864a2f86fa49cd821351a0278772",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "product_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Cart item created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/{id}": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get a specific cart item",
                "description": "Returns a single cart item by ID.",
                "operationId": "c43d7cefedb6cc03b5c5de4fa2cc2d89",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cart item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update an existing cart item",
                "description": "Updates a cart item with new data.",
                "operationId": "ed1e0ee177e4752010f98d03851aae41",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cart item to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart item updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Delete a cart item",
                "description": "Removes a cart item by ID.",
                "operationId": "4a1de2f6acd1eac910587ab938658abf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cart item to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cart deleted successfully"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "description": "Returns a list of all categories.",
                "operationId": "e2dd3a12f317e8f78516bb75c97bc7fc",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Category Title"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Category Description"
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "example": "http://example.com/image.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Creates a new category.",
                "operationId": "858a6af56ce7a4a759553881b6b3a2fc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New Category"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Category Description"
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "example": "http://example.com/image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "New Category"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/image.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input."
                    }
                }
            }
        },
        "/api/category-get-all-paginated": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get paginated categories",
                "description": "Returns a paginated list of categories.",
                "operationId": "01f068573e0c3fe1c8455b91bbef1c88",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "title"
                        }
                    },
                    {
                        "name": "current_page",
                        "in": "query",
                        "description": "Current page number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Category Title"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Category Description"
                                                            },
                                                            "image_url": {
                                                                "type": "string",
                                                                "example": "http://example.com/image.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "next_page_url": {
                                                            "type": "string"
                                                        },
                                                        "prev_page_url": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a specific category",
                "description": "Returns details of a specific category.",
                "operationId": "5135d626104e86ea9910eb51763b8d4d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Category Title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/image.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found."
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "description": "Updates an existing category.",
                "operationId": "6aea2996a1d8d5708b6b26adca6b0f86",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Category"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated Description"
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "example": "http://example.com/updated_image.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Updated Category"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated Description"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "http://example.com/updated_image.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Deletes a specific category.",
                "operationId": "19bebec474ebd26750dd56af34eac8fd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully."
                    },
                    "404": {
                        "description": "Category not found."
                    }
                }
            }
        },
        "/api/city": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get all citys",
                "description": "Returns a list of all citys.",
                "operationId": "7363283289731a0776ed7f6bd67cbcfa",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Category Title"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Category Description"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "City"
                ],
                "summary": "Create a new city",
                "description": "Creates a new city.",
                "operationId": "d7744ae6571c47ec6cb646d19d6e9696",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New Category"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Category Description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input."
                    }
                }
            }
        },
        "/api/cities-get-all-paginated": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get paginated citys",
                "description": "Returns a paginated list of citys.",
                "operationId": "8a275adf1ea204d3e03a2f425aed3d8c",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "title"
                        }
                    },
                    {
                        "name": "current_page",
                        "in": "query",
                        "description": "Current page number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Category Title"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Category Description"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "next_page_url": {
                                                            "type": "string"
                                                        },
                                                        "prev_page_url": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/city/{id}": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get a specific city",
                "description": "Returns details of a specific city.",
                "operationId": "0070b517658535fed02343b7e93e567b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Cityy Title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "City Description"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "City not found."
                    }
                }
            },
            "put": {
                "tags": [
                    "City"
                ],
                "summary": "Update a city",
                "description": "Updates an existing city.",
                "operationId": "8e7432d5887b5b5af5536321c7f3a9ec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated City"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated Description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "City updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Updated City"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated Description"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "City not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "City"
                ],
                "summary": "Delete a city",
                "description": "Deletes a specific city.",
                "operationId": "6e1e0ab1861a1b9f6db499dbac60ffb0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "City deleted successfully."
                    },
                    "404": {
                        "description": "City not found."
                    }
                }
            }
        },
        "/api/earnings": {
            "get": {
                "tags": [
                    "Earnings"
                ],
                "summary": "Get all earnings",
                "description": "Returns a paginated list of all earnings.",
                "operationId": "4cf987c00e9c566a7ad33693700b3dd3",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Earnings retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EarningResource"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Earnings"
                ],
                "summary": "Store a new earning",
                "description": "Creates a new earning record.",
                "operationId": "6d68817a5d266210fbb1e0051067fcef",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "referral_incentive": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "sale_value_estimated": {
                                        "type": "integer",
                                        "example": 500
                                    },
                                    "sale_actual_value": {
                                        "type": "integer",
                                        "example": 450
                                    },
                                    "wallet_amount": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "self_purchase_total": {
                                        "type": "integer",
                                        "example": 200
                                    },
                                    "first_referral_purchase_total": {
                                        "type": "integer",
                                        "example": 150
                                    },
                                    "second_referral_purchase_total": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Earning created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Earning created successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EarningResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/earnings/{id}": {
            "get": {
                "tags": [
                    "Earnings"
                ],
                "summary": "Get a specific earning",
                "description": "Retrieves a specific earning by ID.",
                "operationId": "d08e27a953b2b52a5fb512ae99300bd4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Earning retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Earning retrieved successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EarningResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Earning not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Earning not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Earnings"
                ],
                "summary": "Update a specific earning",
                "description": "Updates a specific earning by ID.",
                "operationId": "dc16422758ac2a58c7e21b49c3dea6c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "referral_incentive": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "sale_value_estimated": {
                                        "type": "integer",
                                        "example": 500
                                    },
                                    "sale_actual_value": {
                                        "type": "integer",
                                        "example": 450
                                    },
                                    "wallet_amount": {
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "self_purchase_total": {
                                        "type": "integer",
                                        "example": 200
                                    },
                                    "first_referral_purchase_total": {
                                        "type": "integer",
                                        "example": 150
                                    },
                                    "second_referral_purchase_total": {
                                        "type": "integer",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Earning updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Earning updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/EarningResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Earning not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Earning not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Earnings"
                ],
                "summary": "Delete a specific earning",
                "description": "Deletes a specific earning by ID.",
                "operationId": "23752712a7f2e62480169efadd99b796",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Earning deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Earning deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Earning not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Earning not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve all Orders",
                "operationId": "803fc5d32177a888e12dd7a8f9d0e6d4",
                "responses": {
                    "200": {
                        "description": "Retrieve all Orders successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new Order",
                "operationId": "33d737c93193573b1687e463b1562642",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_status",
                                    "total_amount"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "address_id": {
                                        "type": "integer"
                                    },
                                    "order_status": {
                                        "type": "integer"
                                    },
                                    "tracking_number": {
                                        "type": "string"
                                    },
                                    "total_amount": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/{order}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Retrieve a specific Order",
                "operationId": "bc66a3e4b8c0fc651e9f55737f5207e0",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specified Order displayed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update a specific Order",
                "operationId": "ea3df4ec62d01bd1a6d410624fe7b921",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_status",
                                    "total_amount"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "address_id": {
                                        "type": "integer"
                                    },
                                    "order_status": {
                                        "type": "integer"
                                    },
                                    "tracking_number": {
                                        "type": "string"
                                    },
                                    "total_amount": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete a specific Order",
                "operationId": "4739f5279d5128b0402f508059af297e",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/order-items": {
            "get": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Retrieve all Order Items",
                "operationId": "7f4681ef6ab0a20397a07106bb624391",
                "responses": {
                    "200": {
                        "description": "Retrieve all Order Items successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OrderItem"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Create a new Order Item",
                "operationId": "1fa1e1f5c18b19fdaba4e08c27d16a04",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_id",
                                    "product_id",
                                    "user_id",
                                    "quantity",
                                    "price",
                                    "total_amount"
                                ],
                                "properties": {
                                    "order_id": {
                                        "type": "integer"
                                    },
                                    "product_id": {
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "type": "integer"
                                    },
                                    "price": {
                                        "type": "integer"
                                    },
                                    "total_amount": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order Item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/OrderItem"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/order-items/{orderItem}": {
            "get": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Retrieve a specific Order Item",
                "operationId": "4281ad4cdc5817d9d2b9f758241639ab",
                "parameters": [
                    {
                        "name": "orderItem",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specified Order Item displayed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/OrderItem"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Update a specific Order Item",
                "operationId": "0afb837ac40d3edecb3f397f9ea1098b",
                "parameters": [
                    {
                        "name": "orderItem",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_id": {
                                        "type": "integer"
                                    },
                                    "product_id": {
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "quantity": {
                                        "type": "integer"
                                    },
                                    "price": {
                                        "type": "integer"
                                    },
                                    "total_amount": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order Item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/OrderItem"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order Items"
                ],
                "summary": "Delete a specific Order Item",
                "operationId": "cd046a960b05f7ca452a274ce24d3d39",
                "parameters": [
                    {
                        "name": "orderItem",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a user",
                "description": "Register a new user and get access token",
                "operationId": "25dc775588d2e73b509bcb375d425b27",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "c_password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "c_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Login and get access token",
                "operationId": "82029854b7191d64582592c46e594dfd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/unit": {
            "get": {
                "tags": [
                    "Unit"
                ],
                "summary": "Get all units",
                "description": "Returns a list of all units.",
                "operationId": "1b7dbcbff0890ea390524c12c822facb",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Unit Title"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Unit Description"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Unit"
                ],
                "summary": "Create a new unit",
                "description": "Creates a new unit.",
                "operationId": "49c635d26219479de7c9b3d6cddf9101",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New Category"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Category Description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid input."
                    }
                }
            }
        },
        "/api/units-get-all-paginated": {
            "get": {
                "tags": [
                    "Unit"
                ],
                "summary": "Get paginated units",
                "description": "Returns a paginated list of units.",
                "operationId": "2c0c6290fe52627799fcd3cd3321f813",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to sort by.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "title"
                        }
                    },
                    {
                        "name": "current_page",
                        "in": "query",
                        "description": "Current page number.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Unit Title"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Unit Description"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer"
                                                        },
                                                        "last_page": {
                                                            "type": "integer"
                                                        },
                                                        "per_page": {
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "next_page_url": {
                                                            "type": "string"
                                                        },
                                                        "prev_page_url": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/unit/{id}": {
            "get": {
                "tags": [
                    "Unit"
                ],
                "summary": "Get a specific unit",
                "description": "Returns details of a specific unit.",
                "operationId": "98b02015c962af7e553b5848193a8053",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Cityy Title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "City Description"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "City not found."
                    }
                }
            },
            "put": {
                "tags": [
                    "Unit"
                ],
                "summary": "Update a unit",
                "description": "Updates an existing unit.",
                "operationId": "2c71e908abcc1a6dbe75f8b9ff83d9ea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated City"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated Description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Unit updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Updated Unit"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated Description"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unit not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Unit"
                ],
                "summary": "Delete a unit",
                "description": "Deletes a specific unit.",
                "operationId": "77228f74a736d8c7cca44cc71afd767a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "City deleted successfully."
                    },
                    "404": {
                        "description": "Unit not found."
                    }
                }
            }
        },
        "/api/user-bank": {
            "get": {
                "tags": [
                    "User Bank"
                ],
                "summary": "Get all user banks",
                "operationId": "beb2bec08984f941e96f42e11b80521c",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User banks retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "User Bank"
                ],
                "summary": "Store a new user bank",
                "operationId": "02c6d2a1feb1bbf95e545654a91b6a9b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bank_name",
                                    "account_number",
                                    "ifsc_code",
                                    "branch_name"
                                ],
                                "properties": {
                                    "bank_name": {
                                        "type": "string"
                                    },
                                    "account_number": {
                                        "type": "string"
                                    },
                                    "ifsc_code": {
                                        "type": "string"
                                    },
                                    "branch_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User bank created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/user-bank/{id}": {
            "get": {
                "tags": [
                    "User Bank"
                ],
                "summary": "Get a specific user bank by ID",
                "operationId": "e74ffcec68382490bd94fc29274a4f06",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user bank",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User bank retrieved successfully"
                    },
                    "404": {
                        "description": "User bank not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User Bank"
                ],
                "summary": "Update a specific user bank",
                "operationId": "f7f7cee70738ec7da607c30aa43e8a5b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user bank",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "bank_name": {
                                        "type": "string"
                                    },
                                    "account_number": {
                                        "type": "string"
                                    },
                                    "ifsc_code": {
                                        "type": "string"
                                    },
                                    "branch_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User bank updated successfully"
                    },
                    "404": {
                        "description": "User bank not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User Bank"
                ],
                "summary": "Delete a specific user bank",
                "operationId": "9aaf1991faabfb3065c84786be3abf63",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user bank",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User bank deleted successfully"
                    },
                    "404": {
                        "description": "User bank not found"
                    }
                }
            }
        },
        "/api/user-details": {
            "get": {
                "tags": [
                    "UserDetails"
                ],
                "summary": "Get all user details",
                "operationId": "5d05a66b400a8e88c74cf841656a53f2",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserReferral"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UserDetails"
                ],
                "summary": "Store a new user detail",
                "operationId": "69536073c5f4ae7ee8b4b24bbf8ac42d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "middle_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "phone_1": {
                                        "type": "string"
                                    },
                                    "phone_2": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/user-details/{id}": {
            "get": {
                "tags": [
                    "UserDetails"
                ],
                "summary": "Get a specific user detail by ID",
                "description": "Returns details of a specific city.",
                "operationId": "85d7dd6e5b5d7b95641198cfe6c3a691",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "New Category"
                                                },
                                                "middle_name": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                },
                                                "phone_1": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                },
                                                "phone_2": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User detail not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "UserDetails"
                ],
                "summary": "Update a specific user detail",
                "operationId": "77f6bba6bed009f61225457ee287ea78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "middle_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "phone_1": {
                                        "type": "string"
                                    },
                                    "phone_2": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User detail updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "New Category"
                                                },
                                                "middle_name": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                },
                                                "phone_1": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                },
                                                "phone_2": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserDetails"
                ],
                "summary": "Delete a specific user detail",
                "operationId": "63e4573dd874b3eb408bf4ee830af0f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User detail deleted successfully"
                    },
                    "404": {
                        "description": "User detail not found"
                    }
                }
            }
        },
        "/api/user-referrals": {
            "get": {
                "tags": [
                    "UserReferrals"
                ],
                "summary": "Get all user referrals",
                "operationId": "f5723f78fe0c43f3ca56e52478ae2787",
                "responses": {
                    "200": {
                        "description": "A list of user referrals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserReferral"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UserReferrals"
                ],
                "summary": "Store a new user referral",
                "operationId": "f694a21ec3f8fa0dab478533b3b37bcf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reg_user_id",
                                    "referral_id"
                                ],
                                "properties": {
                                    "reg_user_id": {
                                        "type": "integer"
                                    },
                                    "referral_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User referral created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserReferral"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user-referrals/{id}": {
            "get": {
                "tags": [
                    "UserReferrals"
                ],
                "summary": "Get a specific user referral by ID",
                "operationId": "d32e727e316668c5e1ad18f0b1c72314",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User referral found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserReferral"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User referral not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "UserReferrals"
                ],
                "summary": "Update a specific user referral",
                "operationId": "ac408a109ddaadc91de8570b2f8c1eae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reg_user_id": {
                                        "type": "integer"
                                    },
                                    "referral_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User referral updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserReferral"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User referral not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserReferrals"
                ],
                "summary": "Delete a specific user referral",
                "operationId": "3b7799cc53be5aefec9792512ff85299",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User referral deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User referral not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "EarningResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "referral_incentive": {
                        "type": "integer",
                        "example": 100
                    },
                    "sale_value_estimated": {
                        "type": "integer",
                        "example": 500
                    },
                    "sale_actual_value": {
                        "type": "integer",
                        "example": 450
                    },
                    "wallet_amount": {
                        "type": "integer",
                        "example": 50
                    },
                    "self_purchase_total": {
                        "type": "integer",
                        "example": 200
                    },
                    "first_referral_purchase_total": {
                        "type": "integer",
                        "example": 150
                    },
                    "second_referral_purchase_total": {
                        "type": "integer",
                        "example": 100
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "Order": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "address_id": {
                        "type": "integer"
                    },
                    "order_status": {
                        "type": "integer"
                    },
                    "tracking_number": {
                        "type": "string"
                    },
                    "total_amount": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "order_id": {
                        "type": "integer"
                    },
                    "product_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "total_amount": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "UserDetailsResource": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "middle_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "phone_1": {
                        "type": "string"
                    },
                    "phone_2": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UserReferral": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "reg_user_id": {
                        "type": "integer"
                    },
                    "referral_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "success": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "200": {
                "description": "Successful response",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "data": {
                                    "type": "object"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Success message"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "404": {
                "description": "Error response",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Error message"
                                },
                                "data": {
                                    "type": "object",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Business",
            "description": "Business"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "City",
            "description": "City"
        },
        {
            "name": "Earnings",
            "description": "Earnings"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Order Items",
            "description": "Order Items"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Unit",
            "description": "Unit"
        },
        {
            "name": "User Bank",
            "description": "User Bank"
        },
        {
            "name": "UserDetails",
            "description": "UserDetails"
        },
        {
            "name": "UserReferrals",
            "description": "UserReferrals"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}